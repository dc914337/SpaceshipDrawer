//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 WorldViewProjection;       // Offset:    0, size:   64
    float4x4 World;                     // Offset:   64, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  128, size:   64
}

cbuffer cbDirLightPS
{
    float3  AmbientDown;                // Offset:    0, size:   12
    float3  AmbientRange;               // Offset:   16, size:   12
}

//
// 2 local object(s)
//
Texture2D DiffuseTexture;
SamplerState LinearSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
    AddressW = uint(WRAP /* 1 */);
    MaxAnisotropy = uint(1);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 Ambient
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 WorldViewProjection;      // Offset:    0 Size:    64
                //   float4x4 World;                    // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  128 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // TEXCOORD                 1   xyz         2     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[11], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_output o2.xyz
                dcl_temps 3
                
                #line 36 "C:\Users\Dmitry\Google Drive\code\C#\SpaceshipDrawer\DX11\HemisphericalAmbient\bin\Debug\FX\ForwardLight.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // output<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // output<3:NaN:Inf>
                mov r0.xy, v2.xyxx  // output<4,5>
                dp3 r2.x, v1.xyzx, cb0[8].xyzx  // output<6:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[9].xyzx  // output<7:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[10].xyzx  // output<8:NaN:Inf>
                mov o0.xyzw, r1.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyz, r2.xyzx  // RenderSceneVS<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                mov o1.xy, r0.xyxx  // RenderSceneVS<4,5>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbDirLightPS
                // {
                //
                //   float3 AmbientDown;                // Offset:    0 Size:    12
                //   float3 AmbientRange;               // Offset:   16 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // LinearSampler                     sampler      NA          NA    0        1
                // DiffuseTexture                    texture  float4          2d    0        1
                // cbDirLightPS                      cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // TEXCOORD                 1   xyz         2     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 55 "C:\Users\Dmitry\Google Drive\code\C#\SpaceshipDrawer\DX11\HemisphericalAmbient\bin\Debug\FX\ForwardLight.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.x, r0.x, v2.y  // input<7:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t0.wxyz, s0
                mov r0.yzw, r0.yyzw  // diffuse<0:Inf,1:Inf,2:Inf>
                mul r0.yzw, r0.yyzw, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                nop 
                mov r0.x, r0.x  // normal<1:NaN:Inf>
                mov r0.yzw, r0.yyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 46
                mul r0.x, r0.x, l(0.500000)
                add r0.x, r0.x, l(0.500000)  // up<0:NaN:Inf>
                mul r1.xyz, r0.xxxx, cb0[1].xyzx
                add r1.xyz, r1.xyzx, cb0[0].xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.yzwy, r1.xyzx  // CalcAmbient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 60
                mov r0.xyz, r0.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.xyz, r0.xyzx  // AmbientLightPS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, l(1.000000)  // AmbientLightPS<3: 1f>
                ret 
                // Approximately 18 instruction slots used
                            
            };
        }

    }

}

